# Generated by Django 3.2.9 on 2022-05-26 19:40

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('fitering_data', models.JSONField(default={'action_check': 'on', 'adventure_check': 'on', 'animation_check': 'on', 'comedy_check': 'on', 'crime_check': 'on', 'documentary_check': 'on', 'drama_check': 'on', 'family_check': 'on', 'fantasy_check': 'on', 'hitory_check': 'on', 'horror_check': 'on', 'movie_query': '', 'music_check': 'on', 'mystery_check': 'on', 'romance_check': 'on', 'sf_check': 'on', 'sort_level': 'down', 'thriller_check': 'on', 'tv_check': 'on', 'vote_checked': 'release_date', 'war_check': 'on', 'western_check': 'on'})),
                ('movie_count', models.IntegerField(default=0)),
                ('reviewed_data', models.JSONField(default={'10402': [0, 0, '음악'], '10749': [0, 0, '로맨스'], '10751': [0, 0, '가족'], '10752': [0, 0, '전쟁'], '10770': [0, 0, 'TV 영화'], '12': [0, 0, '모험'], '14': [0, 0, '판타지'], '16': [0, 0, '애니메이션'], '18': [0, 0, '드라마'], '27': [0, 0, '드라마'], '28': [0, 0, '액션'], '35': [0, 0, '코미디'], '36': [0, 0, '역사'], '37': [0, 0, '서부'], '53': [0, 0, '스릴러'], '80': [0, 0, '범죄'], '878': [0, 0, 'SF'], '9648': [0, 0, '미스터리'], '99': [0, 0, '다큐멘터리']})),
                ('followings', models.ManyToManyField(related_name='followers', to=settings.AUTH_USER_MODEL)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
